<html>
  <head>
    <link rel="stylesheet" href="/styles.css"/>
  </head>
  <body>
    <div class="header">
      <h1>Innovation Tracker</h1>
    </div>
    <div class="topnav">
      <div class="left-align">
        <a href="/ViewPoints">Add Points</a>
        <a href="/ReviewPoints">Review Your Points</a>
      </div>
      <div class="center-align">
        <img src="/zebra.png" alt="Zebra Logo" />
      </div>

    </div>
    <div class="content">
      <p>Please use this survey to help track employee innovation in the Engineering Department</p>
      <div class="coreID">

      </div>
      <div class="custom-select">
        <label>Acomplishment</label>
        <select>
          <option value="0">Choose your Acomplisment</option>
          <option value="1">Identify a meaningful problem that needs a solution (1)</option>
          <option value="2">Identify a new product feature for the backlog (1)</option>
          <option value="3">Attend a Lunch and Learn (1)</option>
          <option value="4">Submit abstract for ZTS Expo or Srjana (1)</option>
          <option value="5">Attend a readout from a customer visit (1)</option>
          <option value="6">Attend JDM Expo, Innovation showcase, Intern project review (1)</option>
          <option value="7">Peer review an IP disclosure - witness, read and understand (1)</option>
          <option value="8">Join Eto Techspresso event (1)</option>
          <option value="9">Take part in brain storming session (2)</option>
          <option value="10">Help someone get their first patent disclosure submitted (2)</option>
          <option value="11">Solve a problem and implement the solution (2)</option>
          <option value="12">Mentoring inventors for success (2)</option>
          <option value="13">Teach a class, lead a Lunch and Learn, lead a techtalk, or developer conf (2)</option>
          <option value="14">Organize and run a brainstorming session (2)</option>
          <option value="15">Visit a customer and present findings (2)</option>
          <option value="16">Supervise a summer intern on one of their projects (2)</option>
          <option value="17">Collaborate across BU's for Differentiation and efficency opportunities (2)</option>
          <option value="18">Submit a peer reviewed IP disclosure (4)</option>
          <option value="19">Patent Committee decides to "pursue" your submission - Phase 2 (4)</option>
          <option value="20">[CUSTOM]</option>
        </select>
      </div>



    </div>
    <script>
      var x, i, j, selElmnt, a, b, c;
      /*look for any elements with the class "custom-select":*/
      x = document.getElementsByClassName("custom-select");
      for (i = 0; i < x.length; i++) {
        selElmnt = x[i].getElementsByTagName("select")[0];
        /*for each element, create a new DIV that will act as the selected item:*/
        a = document.createElement("DIV");
        a.setAttribute("class", "select-selected");
        a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
        x[i].appendChild(a);
        /*for each element, create a new DIV that will contain the option list:*/
        b = document.createElement("DIV");
        b.setAttribute("class", "select-items select-hide");
        for (j = 0; j < selElmnt.length; j++) {
          /*for each option in the original select element,
          create a new DIV that will act as an option item:*/
          c = document.createElement("DIV");
          c.innerHTML = selElmnt.options[j].innerHTML;
          c.addEventListener("click", function(e) {
              /*when an item is clicked, update the original select box,
              and the selected item:*/
              var y, i, k, s, h;
              s = this.parentNode.parentNode.getElementsByTagName("select")[0];
              h = this.parentNode.previousSibling;
              for (i = 0; i < s.length; i++) {
                if (s.options[i].innerHTML == this.innerHTML) {
                  s.selectedIndex = i;
                  h.innerHTML = this.innerHTML;
                  y = this.parentNode.getElementsByClassName("same-as-selected");
                  for (k = 0; k < y.length; k++) {
                    y[k].removeAttribute("class");
                  }
                  this.setAttribute("class", "same-as-selected");
                  break;
                }
              }
              h.click();
          });
          b.appendChild(c);
        }
        x[i].appendChild(b);
        a.addEventListener("click", function(e) {
            /*when the select box is clicked, close any other select boxes,
            and open/close the current select box:*/
            e.stopPropagation();
            closeAllSelect(this);
            this.nextSibling.classList.toggle("select-hide");
            this.classList.toggle("select-arrow-active");
          });
      }
      function closeAllSelect(elmnt) {
        /*a function that will close all select boxes in the document,
        except the current select box:*/
        var x, y, i, arrNo = [];
        x = document.getElementsByClassName("select-items");
        y = document.getElementsByClassName("select-selected");
        for (i = 0; i < y.length; i++) {
          if (elmnt == y[i]) {
            arrNo.push(i)
          } else {
            y[i].classList.remove("select-arrow-active");
          }
        }
        for (i = 0; i < x.length; i++) {
          if (arrNo.indexOf(i)) {
            x[i].classList.add("select-hide");
          }
        }
      }
      /*if the user clicks anywhere outside the select box,
      then close all select boxes:*/
      document.addEventListener("click", closeAllSelect);
    </script>
  </body>
</html>
